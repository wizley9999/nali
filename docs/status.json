[
  {
    "school": "TEMPLATE",
    "status": false,
    "error": "============================= test session starts ==============================\nplatform linux -- Python 3.10.18, pytest-8.4.1, pluggy-1.6.0\nrootdir: /home/runner/work/nali/nali\nconfigfile: pyproject.toml\ncollected 1 item\n\ntests/test_scrapers.py F                                                 [100%]\n\n=================================== FAILURES ===================================\n___________________ test_scraper_for_school[School.TEMPLATE] ___________________\n\nself = <src.nali.core.Nali object at 0x7fef27aded40>\n\n    def get_notices(self, *, page: int = 1, search: str | None = None) -> list[Notice]:\n        try:\n>           return self.__scraper.scrape(page, search)\n\nsrc/nali/core.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <src.nali.scrapers.template.TemplateScraper object at 0x7fef27adece0>\npage = 1, search = None\n\n    def scrape(self, page: int, search: str | None = None) -> list[Notice]:\n        url = \"https://example.com\"\n    \n        soup = self.fetch_page(url=url)\n    \n        title = soup.find(\"title\").text.strip()\n        content = soup.find(\"p\").text.strip()\n    \n>       raise ScrapingError(\"Failed to scrape notices :(\")\nE       src.nali.exceptions.ScrapingError: Failed to scrape notices :(\n\nsrc/nali/scrapers/template.py:17: ScrapingError\n\nDuring handling of the above exception, another exception occurred:\n\nschool = <School.TEMPLATE: 'template'>\ntarget_school = <School.TEMPLATE: 'template'>\n\n    @pytest.mark.parametrize(\"school\", list(School))\n    def test_scraper_for_school(school, target_school):\n        if target_school and school != target_school:\n            pytest.skip(f\"Skipping {school}, not the target\")\n    \n        n = Nali(school)\n>       notices = n.get_notices(page=1)\n\ntests/test_scrapers.py:12: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <src.nali.core.Nali object at 0x7fef27aded40>\n\n    def get_notices(self, *, page: int = 1, search: str | None = None) -> list[Notice]:\n        try:\n            return self.__scraper.scrape(page, search)\n        except Exception as e:\n>           raise ScrapingError(f\"Failed to scrape notices: {str(e)}\")\nE           src.nali.exceptions.ScrapingError: Failed to scrape notices: Failed to scrape notices :(\n\nsrc/nali/core.py:17: ScrapingError\n=========================== short test summary info ============================\nFAILED tests/test_scrapers.py::test_scraper_for_school[School.TEMPLATE] - src.nali.exceptions.ScrapingError: Failed to scrape notices: Failed to scrape notices :(\n============================== 1 failed in 0.28s ==============================="
  }
]
